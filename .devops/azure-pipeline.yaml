# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

resources:
- repo: self
  clean: true

trigger:
- master

variables:
  service: "booking"
  tier: "frontend"
  build: $(Build.BuildId)
#   tag: ${{startsWith(variables['Build.SourceBranchName'], 'refs/tags/')}}

stages:
- stage: SandBox
  jobs:
  - job: SandBoxJob
    steps:
#     - script: echo tag $(tag)
    - script: |
        echo "got here..."
        git describe --exact-match $(Build.SourceVersion)
        echo $tag
        echo "got end..."
    - script: echo ArtifactStagingDirectory $(Build.ArtifactStagingDirectory)
    - script: echo SourcesDirectory $(Build.SourcesDirectory)
    - script: echo DefinitionId $(Build.DefinitionId)
    - script: echo DefinitionName $(Build.DefinitionName)
    - script: echo BuildNumber $(Build.BuildNumber)
    - script: echo BuildId $(Build.BuildId)
    - script: echo BuildURI $(Build.BuildURI)
    - script: echo SourceBranch $(Build.SourceBranch)
    - script: echo SourceBranchName $(Build.SourceBranchName)
    - script: echo SourceVersion $(Build.SourceVersion)
    - script: echo Repository.Provider $(Build.Repository.Provider)
    - script: echo RequestedForID $(Build.RequestedForID)
    - script: echo RequestedFor $(Build.RequestedFor)
    - script: echo Type $(Build.Type)
    - script: ls -la $(Build.SourcesDirectory)/.devops
    - script: ls -la $(Build.ArtifactStagingDirectory)
- stage: Build
  jobs:
  - job: BuildJob
    steps:
    - script: echo "start building and pushing docker image..."
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: '$(service)-$(tier)'
        dockerfile: $(Build.SourcesDirectory)/Dockerfile
        containerRegistry: 'BookingContainerRegistryConnection'
- stage: Test
  jobs:
  - job: TestJob
    steps:
    - script: echo "running test..."
- stage: CopyArtifacts
  jobs:
  - job: CopyArtifactsJob
    steps:
    - script: echo "start copying artifacts..."
    - task: CopyFiles@2
      displayName: Copy files in .devops
      inputs:
        Contents: |
          .devops/*.yaml
        targetFolder: '$(Build.ArtifactStagingDirectory)'    

    - task: PublishBuildArtifacts@1    
      displayName: 'Publish Artifact: drop'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'
